on:
  schedule:
    - cron:  '*/5 * * * *' # every X minutes
  workflow_dispatch: # click the button on Github repo!

jobs:
  sync_with_upstream:
    runs-on: ubuntu-latest
    name: Sync with upstream
    env:
      WORKFLOW_USER: 'emcbot'
      WORKFLOW_EMAIL: 'emcbot@users.noreply.github.com'
      WORKFLOW_TOKEN: ${{ secrets.JEDI_SYNC_TOKEN }}
    strategy:
      matrix:
        organization: ['jcsda']
          #repository: ['saber', 'ioda', 'ufo', 'fv3-jedi', 'fv3-bundle']
        repository: ['ufo']
        branch: ['develop']

    steps:
    - name: Checkout ${{ matrix.organization }}/${{ matrix.repository }}
      uses: actions/checkout@v2
      with:
        #persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        #fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
        repository: noaa-emc/${{ matrix.repository }}
        path: ${{ matrix.repository }}-${{ matrix.branch }}
        ref: ${{ matrix.branch }}

    - name: Pull upstream changes
      id: sync
      run: |
        cd ${{ matrix.repository }}-${{ matrix.branch }}
        git config --global user.name  "${WORKFLOW_USER}"
        git config --global user.email "${WORKFLOW_EMAIL}"
        echo "Adding remotes ..."
        git remote add upstream https://github.com/${{ matrix.organization }}/${{ matrix.repository }}.git
        echo "Remotes added:"
        git remote -v
        git fetch upstream ${{ matrix.branch }}
        LOCAL_COMMIT_HASH=$(git rev-parse ${{ matrix.branch }})
        UPSTREAM_COMMIT_HASH=$(git rev-parse upstream/${{ matrix.branch }})
        if [[ "${LOCAL_COMMIT_HASH}" == "${UPSTREAM_COMMIT_HASH}" ]]; then
          echo "::set-output name=has_new_commits::false"
          echo "No new commits to sync"
        else
          echo "::set-output name=has_new_commits::true"
          echo "New commits being synced:"
          git log upstream/${{ matrix.branch }} "${LOCAL_COMMIT_HASH}"..HEAD --pretty=oneline
          echo "Syncing ..."
          git pull --no-edit upstream ${{ matrix.branch }}
          echo "Sync successful"
          echo "locally modifying config ..."
          git config --local --unset-all "http.https://github.com/.extraheader"
          echo "Pushing branch to origin"
          #git push origin ${{ matrix.branch }}
          git push https://${WORKFLOW_USER}:${WORKFLOW_TOKEN}@github.com/noaa-emc/${{ matrix.repository }}.git $GITHUB_REF
          echo "Push successful"
        fi

    - name: Timestamp
      run: date
